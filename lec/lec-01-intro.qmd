# Einleitung und Übersicht

Im Modul **M 6.9 Analoge Schaltungen (ANS)**, im Bachelorstudiengang (B.Eng.) Elektrotechnik (ET) der Fakultät 4 der
Hochschule Bremen (HSB), werden aus der Theorie des Schaltungsentwurfs gewonnene Kenntnisse im Labor experimentell
erprobt ([ASLK Pro Experimente](https://aslk-pro.readthedocs.io)) und mit [KiCAD](https://www.kicad.org) als eigene
PCB-Designs umgesetzt. Für die erste Erprobung von Schaltungen wird das [ASLK (Analog System Lab Kit)
Pro](https://www.mikroe.com/aslk-pro-kit) der Firma [MikroElektronika](https://www.mikroe.com/) eingesetzt.

Zur Simulation werden Schaltungssimulatoren wie
[LTSpice](https://www.analog.com/en/resources/design-tools-and-calculators/ltspice-simulator.html) und 
[ngspice](https://ngspice.sourceforge.io/index.html) verwendet.

Des Weiteren kommen die [MATLAB Campus-Lizenz](https://de.mathworks.com/products/matlab.html) und
[Python](https://www.python.org) als leistungsstarke Instrumente zur Modellierung und Verhaltensanalyse 
von Filtern- und Verstärkern beim Schaltungsentwurf zum Einsatz.

Für die Charakterisierung der Schaltungen stehen im Labor sechs Meßplätze mit gängigen Gerätschaften wie Quellen,
Signalgeneratoren, Oszilloskopen und dem integrierten Meßlabors [STEMlab](https://www.redpitaya.com/) von RedPitaya zur 
Verfügung.


## Lernziele des Moduls

* Ein tieferes Verständnis für das Verhalten von elektronischen Bauelementen und Baugruppen im analogen
  Schaltungsentwurf entwickeln und Ausblicke auf weiterführende Kurse im Master bekommen.
  
* Funktionsprinzipien und Charakterisierung von elektronischen Bauelementen

* Fundamentale integrierte analoge Schaltungen

* Operationsverstärker

* Lernen, Grenzen und Tradeoffs analoger Schaltungen zu bewerten

* Entwickeln eines systematischen Entwurfsstils, auch anwendbar für andere Ingenieursdisziplinen

* Lernen, einen Schaltungssimulator für den Entwurf einzusetzen.

* Technisch-wissenschaftliche Dokumentation

* Konsoliderung der oberen Aspekte in Laborprojekten


## Voraussetzungen des Moduls

* Digitaltechnik

* Grundlagen der Halbleiterbauelemente

* Netzwerk- und Systemtheorie

* Regelungstechnik 


## Scientific Computing

-   [Python (Anaconda)](https://www.anaconda.com/download/)

-   [Matlab (Campus Lizenz)](https://de.mathworks.com/academia/tah-portal/hochschule-bremen-31463273.html)

-   [Command-line tools](https://jeroenjanssens.com/seven/)

## EDA Tools

-   PCB / System Design
    -   [LTspice](https://www.analog.com/en/design-center/design-tools-and-calculators/ltspice-simulator.html)
    -   [KiCad EDA](https://www.kicad.org/)
    -   [Altium Designer](https://www.altium.com/de/altium-designer)
    -   [SiemensEDA PCB tools](https://eda.sw.siemens.com/en-US/pcb/products/)
    -   [cadence System Design & Analysis](https://www.cadence.com/en_US/home/tools/system-design-and-analysis.html)
-   IC / Silicon Design
    -   [IIC-OSIC-TOOLS (open-source)](https://github.com/iic-jku/IIC-OSIC-TOOLS)
    -   [SiemensEDA IC tools](https://eda.sw.siemens.com/en-US/ic/products/)
    -   [cadence IC Design & Verification](https://www.cadence.com/en_US/home/tools/design-excellence.html)
    -   [synopsys silicon design (IC)](https://www.synopsys.com/silicon-design.html)

## OS-Tools

-   [Microsoft-Terminal](https://github.com/microsoft/terminal)

-   [Microsoft-PowerShell](https://learn.microsoft.com/de-de/powershell/scripting/learn/ps101/01-getting-started)

-   [MacOS-Terminal](https://iterm2.com)

-   [Linux/MacOS Shell zsh-tools](https://ohmyz.sh),

-   [git (Versionskontrolle)](https://git-scm.com)

## Code Editors

-   [Visual Studio Code](https://code.visualstudio.com)

-   [Spyder IDE](https://www.spyder-ide.org)

-   [Thonny (Micro-)Python IDE](https://thonny.org)

-   [Emacs](https://www.gnu.org/software/emacs/)

-   [Vim](https://www.vim.org)

## Data Science

-   File system: Files and directories

-   Tabular data: Comma/Tab-Separated-Values (CSV/TSV), Spreadsheet (.xlsx, .ods)

-   Special formats, e.g. MATLAB mat, HDF5

-   Embedded [Databases](https://db-engines.com)

    -   [SQL](https://en.wikipedia.org/wiki/SQL), z.B. [SQlite](https://en.wikipedia.org/wiki/SQLite)
    -   [OLAP](https://en.wikipedia.org/wiki/Online_analytical_processing), z.B. [DuckDB](https://duckdb.org/why_duckdb)

## Publish Computational Content

-   [Jupyter-Book](https://jupyterbook.org/en/stable/intro.html)

-   [quarto](https://quarto.org)
    -   [Manuscripts](https://quarto.org/docs/manuscripts/)

## Are you writing or TeXing?

-   [MikTeX (Windows, MacOS, Linux)](https://miktex.org/)

-   [MacTeX (MacOS)](https://www.tug.org/mactex/)

-   [TeXLive (Linux)](http://tug.org/texlive/)

## LaTeX Editoren

-   IDE's
    -   [TeXStudio](http://www.texstudio.org)
    -   [TeXMaker](http://www.xm1math.net/texmaker/)
-   Collaborative Frameworks
    -   [Overleaf, Online LaTeX](https://www.overleaf.com/)
    -   [CoCalc - Online LaTeX](https://cocalc.com/doc/latex-editor.html)

## Bibliography and LaTeX

-   [Citavi im Detail \> Titel exportieren \> Export nach BibTeX](https://www1.citavi.com/sub/manual5/de/exporting_to_bibtex.html)

-   [RefWorks - Library Guide Univ. Melbourne](https://unimelb.libguides.com/c.php?g=565734&p=3912294)

-   [Benutzerdefinierte BibTex-Keys mit Zotero \| nerdpause](https://nerdpause.de/benutzerdefinierte-bibtex-keys-mit-zotero/)

-   [JabRef - Library Guide Univ. Melbourne](https://unimelb.libguides.com/c.php?g=565734&p=3897117)

-   [EndNote - Library Guide Univ. Melbourne](https://unimelb.libguides.com/latexbibtex/endnote)

## Labor

* Anwendung unterschiedlicher Beschreibungsebenen
  * Systemebene (Verhaltensmodell z.B. mit Matlab/Simulink oder Python)
  * Schaltungsebene (SPICE)
  * Charakterisierung (Messungen)

* Analog System Lab Kit &ndash; [ASLK Pro](https://aslk-pro.readthedocs.io/de/latest/)

* Messautomatisierung Red Pitaya [STEMlab 125-14/10](https://redpitaya.readthedocs.io/en/latest/developerGuide/125-14/top.html)


## Schaltungsanalyse/-entwurf $\neq$  Black Magic

*Schaltungsanalyse.* 
  * ist die Fähigkeit, Schaltungen in handhabbare Teile zu zerlegen
  * basierend auf einem einfachen, aber hinreichend genauen Modell
  * "Just-in-time" Modellierung: Verwende kein komplexes Modell, so lange es nicht benötigt wird!
  * eine Schaltung $\Rightarrow$ eine Lösung



*Schaltungsdesign/-entwurf.* 
  * ist die Fähigkeit der Schaltungssynthese auf Basis von Erfahrung und intensiver Analyse.
  * eine Spezifikation $\Rightarrow$ viele Lösungen
  * Entwurfspraktiken werden am besten durch’s "Selbermachen" ausgebildet &ndash; "Machen ist wie wollen nur krasser."



## Schöne neue Welt

![<p><em>AMD Jaguar APU (CPU/GPU), 16 nm, 325 qmm, 2016 <div id="fig:jaguar"></div></em></p>](../images/lec-01-AMD@16nm@Jaguar.jpg)



## From Sand to Silicon (Infineon, Dresden)

{{< video "https://www.youtube.com/embed/bor0qLifjz4?list=PLO_wT97BGA6xC6hNy9VGtt1bKwVuQXI5B" width="793" height="446" >}}


## FinFET (Intel)

{{< video "https://www.youtube.com/embed/_VMYPLXnd7E" width="793" height="446" >}}


## TSMC Fab (Next Gen 7/5 nm)

{{< video "https://www.youtube.com/embed/Hb1WDxSoSec" width="793" height="446" >}}


## Es war einmal ...
![<p><em>1906 die Elektronenröhre</em></p>](../images/lec-01-vacuum_tube.png)

![<p><em>1947 der erste Transistor, Bell Labs Foto</em></p>](../images/lec-01-1st_transistor.png)


## Damals und heute
![<p><em>1958 Jack Kilby's erster IC <div id="fig:kilbyic"></div></em></p>](../images/lec-01-1st_ic_kilby.png)

![<p><em>Moderner IC <div id="fig:modernic"></div></em></p>](../images/lec-01-modern_ic.png)



## Systemhierarchie
![<p><em>Funktionsblöcke eines elektronischen Systems.</em></p>](../images/lec-01-system_hierarchy.png)

* Nutzen Sie Hierarchien zur Beschreibung komplexer Systeme
* Teile und herrsche



## System Assembly
![<p><em>Bottom-up Prozess, Integration (c) Maloberti, Wiley 2011.</em></p>](../images/lec-01-system_assembly.png)


## Schnittstellen zur Aussenwelt
![<p><em>Interfacing (c) Maloberti, Wiley 2011.</em></p>](../images/lec-01-real_world_interface.png)


## Meeting mit einem System
![<p><em>Drahtloses Kommunikationssystem (c) Maloberti, Wiley 2011.</em></p>](../images/lec-01-smartphone.png)


## System in a Package (SiP)
![<p><em>Beschleunigungssensor (c) Maloberti, Wiley 2011.</em></p>](../images/lec-01-system_in_package.png)


## Backend Phasen
* Packaging
* Zuverlässigkeit = Qualität auf Zeit
* Testing auf Wafer Level, known good die (KGD)
  * Burn-in und Accelerated Aging (thermischer Stress, Arrhenius Gesetz)
  * Automatic Test Equipment (ATE)
    * System Probe
    * Interconnect Test
    * Build-in Self-Test (BIST)

* Statistische Datenanalyse und Yield Prognosen
  * Ausfallrate FIT (failure in time)
  * Badewannenkurve


## Sie werden Experte

*Leistungsmerkmale.* 
* Hintergrundwissen
  * Systemverständnis, Architektur, Herstellungsverfahren, Implementation

* Unterbewusste Kompetenz
  * Abgespeicherte Erfahrungen aus Erfolgsgeschichten und Misserfolgen

* Spezialwissen
  * Berufsspezifisches Wissen

* Teamwork Haltung
  * Kommunikationsfähigkeit, Berichtswesen und technische Präsentation

* Kreativität
* Tool-Kenntnisse


## Evolution von Produkten
* Angetrieben durch Technologieverbesserung
  * Kosten (größere Chips, geringere Größe der Merkmale, bessere Ausbeute)
  * Leistung (neue Bauteile, höhere Geschwindigkeit, weniger Stromverbrauch)

* Angetrieben durch Verbesserung der Entwurfsmethodik
  * Architektur (Leistung, Funktionen)
  * CAD (Entwicklungskosten, Time-to-Market)

* Komplexität der Designs verdoppelt sich jedes Jahr (Moore's Gesetz)
* Rolle von CAD
  * Verbesserung der Produktivität von Konstruktionsprozessen
  * Reduzierung der Komplexität für den Konstrukteur
  * Sicherstellung des ordnungsgemäßen Betriebs der Geräte


## EDA Kompetenz
* EDA-Anbieter (Tool-Entwickler)
  * Identifikation von Entwurfsaufgaben, Bedarf an Werkzeugen
  * Entwicklung von Strategien und Algorithmen
  * Implementierung von Software-Werkzeugen
  * Verifikation der Stabilität und Funktionalität der Software-Tools

* IC-Hersteller
  * Entscheidungsplanung, welches Tool die Produktivität steigern könnte
  * EDA-Tool-Manager, Installation und Wartung
  * Experten für Softwareeinsatz, Anwendung in Produktdesign und -entwicklung

* Dozenten und Studenten
  * Jobchancen
  * Notwendigkeit, auf dem Laufenden zu bleiben


## Design-/Entwurfsmethodik

* Full Custom - vollständig manuell: ASIC
  * Überwiegend analoge Schaltungen
  * Einfache digitale Gatter
  * Volle Kontrolle, aber lange Entwicklungszeit (bis zu Jahren)

* Semi-custom: ASIC-Fertigung mit Verwendung von vorgefertigten Teilen
  * Standardzellen, Makrozellen, IP's
  * Wiederverwendung von vordefinierten Blöcken oder Maskensätzen
  * Eingeschränkte Kontrolle/Flexibilität, aber kürzere Entwicklungszeit (bis zu Wochen)

* Vollständig automatisiert: Keine Fertigung, reprogrammierbare ASICs
  * FPGA, PLA
  * Ausschließlich digitale Schaltungen
  * Schnelles Prototyping


## Nachhaltige Elektronik ...

{{< video "https://www.youtube.com/embed/7S5IuaKiZIY" width="859" height="483" >}}

<p><em>Geekchester.</em></p>


## Warum es sicht lohnt ...

{{< video "https://www.youtube.com/embed/SwPGxwBZw6I" width="859" height="483" >}}

<p><em>Circuit Song.</em></p>


## Und ab an den Strand ...

{{< video "https://www.youtube.com/embed/ekkJlQf-K4I" width="859" height="483" >}}

<p><em>Viva la Electronica.</em></p>
